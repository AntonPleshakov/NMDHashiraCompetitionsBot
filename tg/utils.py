import os
import threading
from textwrap import dedent
from typing import Union, Tuple, List, Optional

from telebot import TeleBot
from telebot.types import (
    InlineKeyboardButton,
    KeyboardButton,
    Message,
    CallbackQuery,
    ReactionType,
    ReactionTypeEmoji,
    InlineKeyboardMarkup,
)

from db.admins import admins_db
from db.ratings import Rating
from db.tournament_structures import Match, TournamentSettings, RegistrationRow
from logger.NMDLogger import nmd_logger


def get_permissions_denied_message(user_id: int):
    admins_list = [
        f'<a href="tg://user?id={admin.user_id}">{admin.username}</a>'
        for admin in admins_db.get_admins()
    ]
    return (
        "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.\n"
        + "–í–∑–∞–∏–º–æ–¥–µ—Å—Ç–≤–∏–µ —Å —Ç—É—Ä–Ω–∏—Ä–æ–º –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã—Ö —á–∞—Ç–∞—Ö.\n"
        + "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π —á–∞—Å—Ç–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –æ–¥–Ω–æ–º—É –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å –≤–∞—à–∏–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º.\n"
        + f"–í–∞—à ID: {user_id}\n"
        + "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: "
        + ", ".join(admins_list)
    )


def report_to_admins(bot: TeleBot, message: str):
    nmd_logger.info(f"Report a message to admins:\n{message}")
    for admin in admins_db.get_admins():
        bot.send_message(chat_id=admin.user_id.value, text=message)


def get_right_suffix(value: int, word_without_suffix: str) -> str:
    if value % 10 == 1 and value % 100 != 11:
        return word_without_suffix
    elif 2 <= value % 10 <= 4 and not 12 <= value % 100 <= 14:
        return word_without_suffix + "–∞"
    else:
        return word_without_suffix + "–æ–≤"


def get_tournament_welcome_message(
    settings: TournamentSettings, tournament_url: str
) -> str:
    registration_hours = settings.registration_duration_hours.value
    tour_hours = settings.round_duration_hours.value
    tours = settings.rounds_number.value
    return dedent(
        f"""
        <b>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</b>
        –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —Ç—Ä–∏–±—É—Ç—ã!

        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–æ–≤—ã–π —Ç—É—Ä–Ω–∏—Ä, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –≤ –±–∏—Ç–≤–∞—Ö.
        –°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø–æ —Å–∏—Å—Ç–µ–º–µ –ú–∞–∫-–ú–∞–≥–æ–Ω–∞ –≤ {tours} {get_right_suffix(tours, "—Ç—É—Ä")}
        –ü–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Ç—É—Ä–Ω–∏—Ä–∞ —Ä–µ–π—Ç–∏–Ω–≥ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω –ø–æ —Ñ–æ—Ä–º—É–ª–µ –≠–ª–æ —Å —É—á–µ—Ç–æ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è.
        –í—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ ‚Äì —É –≤–∞—Å –µ—Å—Ç—å –≤—Å–µ–≥–æ {registration_hours} {get_right_suffix(registration_hours, "—á–∞—Å")}, —á—Ç–æ–±—ã –∑–∞—è–≤–∏—Ç—å –æ —Å–≤–æ–µ–º —É—á–∞—Å—Ç–∏–∏. ‚è≥

        –ö–∞–∂–¥—ã–π —Ç—É—Ä –±—É–¥–µ—Ç –¥–ª–∏—Ç—å—Å—è {tour_hours} {get_right_suffix(tour_hours, "—á–∞—Å")}.
        –í–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å—Å—è –æ –≤—Ä–µ–º–µ–Ω–∏ –±–∏—Ç–≤—ã –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞—Ä—Ç—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ–π, –∫–æ—Ç–æ—Ä—É—é —è –±—É–¥—É –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ.

        üì• –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ç—É—Ä–Ω–∏—Ä –º–æ–∂–Ω–æ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.

        –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —è —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –ª–∏—á–Ω–æ, —á—Ç–æ–±—ã —É—Ç–æ—á–Ω–∏—Ç—å –≤–∞—à –Ω–∏–∫ –≤ –∏–≥—Ä–µ, –µ—Å–ª–∏ –æ–Ω –º–Ω–µ –µ—â–µ –Ω–µ –∏–∑–≤–µ—Å—Ç–µ–Ω.

        –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–∏—Ç–≤ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —Ç—É—Ä–∞.
        –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—É—Ä–Ω–∏—Ä–µ, –≤–∫–ª—é—á–∞—è —Å–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–≤—à–∏—Ö—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —Ç—É—Ä–Ω–∏—Ä–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: <a href="{tournament_url}">—Ç—ã–∫</a>

        –ï—Å–ª–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –±–∏—Ç–≤–µ –∏–ª–∏ –≤–æ –≤—Ä–µ–º—è —Ç—É—Ä–Ω–∏—Ä–∞ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–æ—à—É –≤–∞—Å —Å–æ–æ–±—â–∏—Ç—å –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.
        –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —ç—Ç–æ –ø–µ—Ä–≤—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—É—Å–∫–∏, –ø–æ—ç—Ç–æ–º—É –≤–æ–∑–º–æ–∂–Ω—ã –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏.

        –°—á–∞—Å—Ç–ª–∏–≤—ã—Ö –≤–∞–º –≥–æ–ª–æ–¥–Ω—ã—Ö –∏–≥—Ä.
        –ò –ø—É—Å—Ç—å —É–¥–∞—á–∞ –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç —Å –≤–∞–º–∏.
        """
    )


def get_next_tour_message(
    settings: TournamentSettings,
    pairs: List[Match],
    tours_number: int,
    tournament_url: str,
) -> str:
    tour_hours = settings.round_duration_hours.value
    pairs_str = ""
    for match in pairs:
        first = f'<a href="{match.first_id.value}">{match.first.value}</a>'
        second = f'<a href="{match.second_id.value}">{match.second.value}</a>'
        pairs_str += f"{first} vs {second}"
    return dedent(
        f"""
        –í–Ω–∏–º–∞–Ω–∏–µ, —Ç—Ä–∏–±—É—Ç—ã!

        –ù–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –¥–ª—è {tours_number} —Ç—É—Ä–∞ –Ω–∞—à–µ–≥–æ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–≥–æ —Ç—É—Ä–Ω–∏—Ä–∞.
        –ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –¥–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—é —Å–∏–ª—É –∏ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –Ω–∞ –∞—Ä–µ–Ω–µ!

        –£ –≤–∞—Å –µ—Å—Ç—å {tour_hours} {get_right_suffix(tour_hours, "—á–∞—Å")} –Ω–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –±–∏—Ç–≤—ã.
        –î–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å —Å —Å–æ–ø–µ—Ä–Ω–∏–∫–æ–º –æ –≤—Ä–µ–º–µ–Ω–∏ –≤—Å—Ç—Ä–µ—á–∏ –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∫–∞—Ä—Ç—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–æ —Å–ª–µ–¥—É—é—â–µ–π —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ–π:
        {pairs_str}
        –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—É—Ä–Ω–∏—Ä–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: {tournament_url}

        –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –±–∏—Ç–≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
        –ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π —Ö–æ–¥ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç –≤–∞—Å –∫ –ø–æ–±–µ–¥–µ –∏ —Å–ª–∞–≤–µ!

        –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—Å–µ –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–æ–±–ª–µ–º—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–µ–∑–∞–º–µ–¥–ª–∏—Ç–µ–ª—å–Ω–æ –¥–æ–≤–µ–¥–µ–Ω—ã –¥–æ —Å–≤–µ–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        –≠—Ç–æ—Ç —Ç—É—Ä–Ω–∏—Ä ‚Äì –∏—Å–ø—ã—Ç–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –Ω–∞—Å, –Ω–æ –º—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤—ã —Å–ø—Ä–∞–≤–∏—Ç–µ—Å—å.

        –ü—É—Å—Ç—å —É–¥–∞—á–∞ –±—É–¥–µ—Ç –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ! –î–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –±–∏—Ç–≤–∞! üéÆüèÜ
        """
    )


def get_tournament_end_message(winners: List[str], tournament_url: str) -> str:
    places = ["ü•á –ü–µ—Ä–≤–æ–µ", "ü•à –í—Ç–æ—Ä–æ–µ", "ü•â –¢—Ä–µ—Ç—å–µ"]
    winners_str = ""
    for i, winner in enumerate(winners):
        if i > len(places):
            break
        winners_str += places[i] + " –º–µ—Å—Ç–æ: " + winner + "\n"
    return dedent(
        f"""
        –¢—Ä–∏–±—É—Ç—ã!

        –ù–∞—à —Ç—É—Ä–Ω–∏—Ä –ø–æ–¥–æ—à–µ–ª –∫ –∫–æ–Ω—Ü—É.
        –í—ã –≤—Å–µ –ø—Ä–æ—è–≤–∏–ª–∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—É—é —Å–∏–ª—É, —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∏ –≤–æ–ª—é –∫ –ø–æ–±–µ–¥–µ.
        –ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –æ–±—ä—è–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ —á–µ—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞—à–∏—Ö —á–µ–º–ø–∏–æ–Ω–æ–≤.

        {winners_str}

        –í—ã –ø–æ–∫–∞–∑–∞–ª–∏ –≤—ã—Å—à–∏–π –∫–ª–∞—Å—Å –≤ —ç—Ç–æ–º —Ç—É—Ä–Ω–∏—Ä–µ, –∏ –≤–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∞–≤—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –≤ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞—à–∏—Ö –±–∏—Ç–≤.
        –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö —Ç—É—Ä–Ω–∏—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: {tournament_url}

        –ú—ã –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∑–∞ –∏—Ö —É—Å–µ—Ä–¥–∏–µ –∏ –±–æ–µ–≤–æ–π –¥—É—Ö.
        –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.

        –ü—É—Å—Ç—å —É–¥–∞—á–∞ –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, –∏ –¥–æ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —Ç—É—Ä–Ω–∏—Ä–µ! üéÆüèÜ

        –° —É–≤–∞–∂–µ–Ω–∏–µ–º,
        –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç—É—Ä–Ω–∏—Ä–∞
        """
    )


def get_tournament_end_without_players_message() -> str:
    return dedent(
        """
        –¢—Ä–∏–±—É—Ç—ã!

        –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞—à —Ç—É—Ä–Ω–∏—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –Ω–µ —É—Å–ø–µ–≤ –Ω–∞—á–∞—Ç—å—Å—è.
        –ë—É–¥–µ–º –Ω–∞–¥–µ—è—Ç—å—Å—è —á—Ç–æ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –∂–µ–ª–∞—é—â–∏—Ö –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –±—É–¥–µ—Ç –±–æ–ª—å—à–µ.

        –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.

        –ü—É—Å—Ç—å —É–¥–∞—á–∞ –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, –∏ –¥–æ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —Ç—É—Ä–Ω–∏—Ä–µ! üéÆüèÜ

        –° —É–≤–∞–∂–µ–Ω–∏–µ–º,
        –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç—É—Ä–Ω–∏—Ä–∞
        """
    )


def get_ids(message: Union[Message, CallbackQuery]) -> Tuple[int, int, int]:
    user_id = message.from_user.id
    if isinstance(message, CallbackQuery):
        message = message.message
    chat_id = message.chat.id
    message_id = message.id
    return user_id, chat_id, message_id


def get_user_view(message: Union[Message, CallbackQuery]) -> str:
    user = message.from_user
    return f"{user.first_name} {user.last_name}({user.username})"


def get_player_rating_view(player: Union[RegistrationRow, Rating]) -> str:
    return f"{player.tg_username.value}({player.nmd_username.value}): {player.rating.value}"


class Button:
    def __init__(self, descr: str, data: str = ""):
        self.data = data
        self.descr = descr

    def inline(self):
        return InlineKeyboardButton(text=self.descr, callback_data=self.data)

    def reply(self):
        return KeyboardButton(text=self.descr)


def empty_filter(_):
    return True


def get_like_emoji() -> List[ReactionType]:
    return [ReactionTypeEmoji("üëç")]


def get_dislike_emoji() -> List[ReactionType]:
    return [ReactionTypeEmoji("üëé")]


def main_menu_keyboard():
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(Button("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã", "admins").inline())
    keyboard.add(Button("–†–µ–π—Ç–∏–Ω–≥–∏", "ratings").inline())
    keyboard.add(Button("–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", "global_settings").inline())
    keyboard.add(Button("–¢—É—Ä–Ω–∏—Ä", "tournament").inline())
    keyboard.add(Button("–°–ª—É–∂–µ–±–Ω—ã–µ", "dev").inline())
    keyboard.add(Button("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ", "users").inline())
    return keyboard


def home(message: Union[Message, CallbackQuery], bot: TeleBot):
    nmd_logger.info(f"Home for {message.from_user.username}")
    keyboard = main_menu_keyboard()
    text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    user_id, chat_id, message_id = get_ids(message)
    if isinstance(message, CallbackQuery):
        bot.edit_message_text(
            text=text,
            chat_id=chat_id,
            message_id=message_id,
            reply_markup=keyboard,
        )
    else:
        bot.send_message(
            chat_id=chat_id,
            text=text,
            reply_markup=keyboard,
        )
    bot.delete_state(user_id)


class TournamentTimer:
    def __init__(self):
        self._timer: Optional[threading.Timer] = None

    def update_timer(self, interval, function, args=None, kwargs=None):
        if os.getenv("MODE", "Release") == "Debug":
            interval = interval / 60  # hours to minutes for debug mode
        self._timer = threading.Timer(interval, function, args, kwargs)
        return self

    def start(self):
        if self._timer:
            self._timer.start()

    def cancel(self):
        if self._timer:
            self._timer.cancel()


tournament_timer = TournamentTimer()
